---
title: Flujo Gestión de Flota KyberCore - Mejorado
---
flowchart TD
    subgraph "Flujo Principal: Carga y CRUD"
        direction LR
        Usuario([Usuario Navegador]) -->|Clic| appjs[app.js]
        appjs -->|CargaModulo| fleet_controller_html["GET /fleet"]
        fleet_controller_html -->|RenderizaHTML| fleethtml[fleet.html]
        appjs -->|InicializaJS| fleetjs[fleet.js]
        fleetjs -->|PideDatos| fleet_controller_data["GET /data"]
        
    subgraph "Proceso Backend (Carga)"
        direction TB
        fleet_controller_data -->|LlamaServicio| fleet_service["fleet_service.py"]
        fleet_service -->|LeeDatos| printersjson["printers.json"]
        fleet_service -->|ConsultaEstado| moonraker_api["Moonraker API (HTTP)"]
        printersjson -->|RetornaDatos| fleet_service
        moonraker_api -->|RetornaEstado| fleet_service
        fleet_service -->|RetornaDatos| fleet_controller_data
    end

        fleet_controller_data -->|DevuelveJSON| fleetjs
        fleetjs -->|DibujaUI| fleethtml

        Usuario -->|AccionCRUD| fleethtml
        fleethtml -->|LlamaJS| fleetjs
        fleetjs -->|PeticionAPI| fleet_controller_crud["POST / PUT / DELETE /printers"]
        
        subgraph "Proceso Backend (CRUD)"
            direction TB
            fleet_controller_crud -->|Valida| ia_validator["Servicio Validación/IA"]
            ia_validator -- OK --> fleet_service_crud["fleet_service.py"]
            ia_validator -- Error --- fleet_controller_crud
            fleet_service_crud -->|EjecutaCRUD| printersjson_crud["printers.json"]
            fleet_service_crud -->|ComandoHW| moonraker_api_crud["Moonraker API (HTTP)"]
            printersjson_crud -->|Confirma| fleet_service_crud
            moonraker_api_crud -->|ConfirmaHW| fleet_service_crud
            fleet_service_crud -->|RetornaResultado| fleet_controller_crud
        end
        
        fleet_controller_crud -->|DevuelveJSON| fleetjs
        fleetjs -->|FeedbackUI| Usuario
    end

    subgraph "Flujo Asíncrono: Actualizaciones en Tiempo Real"
        direction TB
        fleetjs_ws[fleet.js] -.->|AbreConexionWS| backend_ws[Backend WS]
        backend_ws -.->|IniciaMonitor| monitor_ws["RealtimeMonitor"]
        monitor_ws -.->|Consulta periódica| moonraker_ws["Moonraker WS"]
        moonraker_ws -- EventosHW --> monitor_ws
        monitor_ws -- Cambios relevantes --> backend_ws
        backend_ws <==>|ComunicacionBidireccional| fleetjs_ws
        backend_ws -- AlertaCrítica --> fleetjs_ws
        fleetjs_ws -->|ActualizaUI| fleethtml
        fleetjs_ws -.->|Reconexión automática| backend_ws
    end

    %% Leyenda de colores y tipos de línea
    classDef frontend fill:#dae8fc,stroke:#6c8ebf;
    classDef backend fill:#d5e8d4,stroke:#82b366;
    classDef db fill:#f8cecc,stroke:#b85450;
    classDef user fill:#fff2cc,stroke:#d6b656;
    classDef moonraker fill:#fff,stroke:#ff9800,stroke-width:2px;

    class appjs,fleetjs,fleethtml,fleetjs_ws frontend;
    class fleet_controller_html,fleet_controller_data,fleet_controller_crud,fleet_service,fleet_service_crud,ia_validator,backend_ws,monitor_ws backend;
    class printersjson,printersjson_crud db;
    class Usuario user;
    class moonraker_api,moonraker_api_crud,moonraker_ws moonraker;
