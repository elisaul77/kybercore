version: '3.8'
services:
  kybercore:
    build: .
    container_name: kybercore
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONOPTIMIZE=1
    # Límites de recursos para evitar consumo excesivo de CPU/memoria
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    # Comando optimizado con parámetros válidos de Uvicorn
    command: [
      "uvicorn", "src.api.main:app", 
      "--host", "0.0.0.0", 
      "--port", "8000",
      "--workers", "1",
      "--backlog", "32",
      "--timeout-keep-alive", "5",
      "--timeout-graceful-shutdown", "10",
      "--log-level", "info"
    ]
    restart: unless-stopped
    # Configuración de salud del contenedor
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/fleet/printers", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Agrega aquí otros servicios (db, cache, etc.) si es necesario

  apislicer:
    build:
      context: ./APISLICER
    container_name: apislicer-slicer-api
    ports:
      - "8001:8000" # host:container (usamos 8001 para evitar conflicto con kybercore en 8000)
    volumes:
      - ./APISLICER/uploads:/app/uploads
      - ./APISLICER/output:/app/output
      - ./APISLICER/config:/app/config
      - ./APISLICER/app:/app/app
    environment:
      - PYTHONUNBUFFERED=1
      - DISPLAY=:99
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
